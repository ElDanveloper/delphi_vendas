unit View.mensagens;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, View.base, Vcl.StdCtrls, Vcl.ExtCtrls,
  Vcl.Buttons, Vcl.Imaging.pngimage;

  type
  tMyButtons =(mbNao, mbSim, mbOk);

type
  TViewMensagens = class(TViewBase)
    pnlImagens: TPanel;
    pnlConteudo: TPanel;
    pnlTitulo: TPanel;
    pnlBotoes: TPanel;
    mmoTexto: TMemo;
    lblTitulo: TLabel;
    btnOk: TSpeedButton;
    btnSim: TSpeedButton;
    btnNao: TSpeedButton;
    imgAlert: TImage;
    imgInformation: TImage;
    imgError: TImage;
    procedure btnSimClick(Sender: TObject);
  private
    { Private declarations }
  public
   class function Mensagem(Texto: String; Titulo: String; Tipo: Char; Botoes: array of tMyButtons): Boolean;
  end;

var
  ViewMensagens: TViewMensagens;

implementation

{$R *.dfm}

{ TViewMensagens }

procedure TViewMensagens.btnSimClick(Sender: TObject);
begin
  inherited;
  Self.ModalResult := mrYes;
end;

class function TViewMensagens.Mensagem(Texto, Titulo: String; Tipo: Char; Botoes: array of tMyButtons): Boolean;

var
 i: Integer;
 view: TViewMensagens;

begin

  view := TViewMensagens.Create(nil);
  try

    view.lblTitulo.Caption := Titulo;
    view.mmoTexto.Text     := Texto;

    for i := 0 to Length(Botoes) - 1 do
    begin

     case (Botoes[i]) of

     mbOk:    begin
                view.btnOk.Visible := True;
                view.btnOk.Align   := alRight
              end;

      mbSim:  begin
              view.btnSim.Visible := True;
              view.btnSim.Align   := alRight
              end;

      mbNao:  begin
              view.btnNao.Visible := True;
              view.btnNao.Align   := alRight
              end;

              else begin
                view.BtnOk.Visible  :=True;
                view.BtnOk.Align    := alRight;
              end;
     end;

    end;

    //tipo das imagens
    case (Tipo) of

      'I': begin
            view.imgInformation.Visible := True; //Informação
           end;

      'A': begin
            view.imgAlert.Visible := True;   //Alerta
           end;

      'E': begin
            view.imgError.Visible := True;   //Alerta
           end;

           else begin
            view.imgInformation.Visible := True;
           end;
    end;

    // Mostrar o formulário
    view.ShowModal;

  finally
   if (view <> nil) then
    FreeAndNil(view);

  end;

end;

end.
